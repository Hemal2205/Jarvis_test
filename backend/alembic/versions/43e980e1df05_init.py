"""init

Revision ID: 43e980e1df05
Revises: 
Create Date: 2025-07-29 17:14:21.540271

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '43e980e1df05'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('autonomous_agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('current_task', sa.String(length=256), nullable=True),
    sa.Column('avatar_url', sa.String(length=256), nullable=True),
    sa.Column('role', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evolution_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=32), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('changes', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('autonomous_agent_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('result', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['autonomous_agents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('device_type', sa.String(length=16), nullable=True),
    sa.Column('push_token', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evolution_suggestions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('assigned_agent_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['autonomous_agents.id'], ),
    sa.ForeignKeyConstraint(['assigned_agent_id'], ['autonomous_agents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('encoding', sa.LargeBinary(), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('memories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=16), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('emotion', sa.String(length=32), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=32), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('level', sa.String(length=32), nullable=True),
    sa.Column('mastery_score', sa.Float(), nullable=True),
    sa.Column('resources', sa.JSON(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('learned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('enable_google_calendar', sa.Boolean(), nullable=True),
    sa.Column('enable_outlook_calendar', sa.Boolean(), nullable=True),
    sa.Column('enable_meeting_reminders', sa.Boolean(), nullable=True),
    sa.Column('enable_app_suggestions', sa.Boolean(), nullable=True),
    sa.Column('notification_mode', sa.String(length=32), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('openai_api_key', sa.String(length=128), nullable=True),
    sa.Column('gemini_api_key', sa.String(length=128), nullable=True),
    sa.Column('llm_model_preference', sa.String(length=64), nullable=True),
    sa.Column('daily_goal', sa.String(length=256), nullable=True),
    sa.Column('focus_block', sa.JSON(), nullable=True),
    sa.Column('break_block', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('videos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(length=256), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('voices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('model', sa.LargeBinary(), nullable=True),
    sa.Column('samples', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('evolution_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('suggestion_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=32), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['suggestion_id'], ['evolution_suggestions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evolution_suggestion_collaborations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('suggestion_id', sa.Integer(), nullable=True),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=32), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['autonomous_agents.id'], ),
    sa.ForeignKeyConstraint(['suggestion_id'], ['evolution_suggestions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('topic', sa.String(length=256), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('content_learned', sa.JSON(), nullable=True),
    sa.Column('questions_asked', sa.JSON(), nullable=True),
    sa.Column('practice_exercises', sa.JSON(), nullable=True),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suggestion_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('suggestion_id', sa.Integer(), nullable=True),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['autonomous_agents.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['suggestion_messages.id'], ),
    sa.ForeignKeyConstraint(['suggestion_id'], ['evolution_suggestions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('suggestion_messages')
    op.drop_table('learning_sessions')
    op.drop_table('evolution_suggestion_collaborations')
    op.drop_table('evolution_history')
    op.drop_table('voices')
    op.drop_table('videos')
    op.drop_table('user_settings')
    op.drop_table('tasks')
    op.drop_table('skills')
    op.drop_table('notifications')
    op.drop_table('memories')
    op.drop_table('faces')
    op.drop_table('evolution_suggestions')
    op.drop_table('devices')
    op.drop_table('autonomous_agent_tasks')
    op.drop_table('users')
    op.drop_table('evolution_logs')
    op.drop_table('autonomous_agents')
    # ### end Alembic commands ###
