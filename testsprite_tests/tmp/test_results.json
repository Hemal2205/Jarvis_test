[
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "58859c6e-05ab-4e0b-88ce-a18c5cb5cf10",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC001-Biometric Authentication Success",
    "description": "Verify that user can successfully authenticate with valid face and voice biometrics with liveness detection under normal conditions.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:5173\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on Face Recognition to initiate biometric authentication.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[17]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Enable camera permissions to allow live face biometric capture.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[15]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Click on Privacy & Security to check and enable camera and microphone permissions.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div/div[3]/div/div/div/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Enable Camera Access toggle to allow camera usage for face recognition.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div/div[3]/div[2]/div/div[2]/div[3]/div[2]/label').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: Authentication with face and voice biometrics did not succeed.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Reported the issue with Camera Access toggle not enabling, which blocks biometric authentication testing. Stopping further actions as the test cannot proceed without camera access.\nBrowser Console Logs:\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0843B002C1A0000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1a2c08068680]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1a2c08068680]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1a2c08068680]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1a2c08068680]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat) (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)\n[ERROR] Error accessing camera: NotFoundError: Requested device not found (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)\n[ERROR] Error accessing camera: NotFoundError: Requested device not found (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/24c804c8-00c1-70ae-4601-1e8febd5bde7/1753208812198681//tmp/test_task/result.webm",
    "created": "2025-07-22T18:12:24.933Z",
    "modified": "2025-07-22T18:26:52.467Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "a7d31007-d6d7-4014-b828-a8dc532f84da",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC002-Biometric Authentication Failure on Spoofing",
    "description": "Verify that authentication fails when presented with spoofed biometric data (photos, recordings) failing liveness detection.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:24.940Z",
    "modified": "2025-07-22T18:12:24.940Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "18cef055-4883-439c-bd9c-d8e3a37a7e01",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC003-Multi-LLM AI Brain Conversation and Code Generation",
    "description": "Verify that the AI Brain integrates multiple LLMs to perform reasoning, planning, conversation, and code generation accurately.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:24.948Z",
    "modified": "2025-07-22T18:12:24.948Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "ab8b0928-ec0a-4673-a210-675f7763441a",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC004-Memory Vault Secure Storage and Playback",
    "description": "Validate encrypted storage of memories and secure playback from the Memory Vault.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:24.953Z",
    "modified": "2025-07-22T18:12:24.953Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "911edc3f-fc1f-4d1d-8514-61184fb6d3e9",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC005-Stealth Mode Anti-Detection Functionality",
    "description": "Test that Stealth Modes effectively bypass proctoring detection in exam mode without affecting legitimate usage.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:24.959Z",
    "modified": "2025-07-22T18:12:24.959Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "9fadd3e4-94bc-4fdf-9cfd-2408bdf00905",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC006-System Automation Workflow Execution",
    "description": "Verify user-configured automation workflows on desktop, browser, cloud, and smart home devices execute successfully.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:24.966Z",
    "modified": "2025-07-22T18:12:24.966Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "66e13250-cbac-4e2a-9954-d2f74706d09e",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC007-Copy Engine License Enforcement",
    "description": "Verify that the Copy Engine enforces licensing and master control preventing unauthorized AI copy usage.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:5173\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on the 'Copy Engine' button to access the copy management interface.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[5]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Attempt to clone an AI copy without proper licensing by entering a copy brief and generating copy.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div/div[2]/div/div[2]/textarea').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('Attempt to clone AI copy without license key.')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div/div[2]/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Reload the page to restore interactive elements and access Copy Engine interface.\n        await page.goto('http://localhost:5173/', timeout=10000)\n        \n\n        # Click on the 'Copy Engine' button to access the copy management interface and retry cloning without license.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[5]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Generic failure assertion: Expected result unknown, marking test as failed.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "The Copy Engine interface is not loading properly, preventing verification of licensing enforcement. Testing cannot proceed until this issue is resolved. Reporting the issue and stopping further actions.\nBrowser Console Logs:\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0AC3A00842C0000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x2c84082ac000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x2c84082ac000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x2c84082ac000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x2c84082ac000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat) (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/templates:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/templates:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/generate:0:0)\n[ERROR] The above error occurred in the <CopyEngine> component:\n\n    at CopyEngine (http://localhost:5173/src/components/CopyEngine/CopyEngine.tsx:23:37)\n    at div\n    at div\n    at Router (http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c01f0ecd:6181:13)\n    at BrowserRouter (http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c01f0ecd:9243:3)\n    at JarvisProvider (http://localhost:5173/src/context/JarvisContext.tsx:29:34)\n    at NotificationProvider (http://localhost:5173/src/components/NotificationContext.tsx:62:40)\n    at App (http://localhost:5173/src/App.tsx:53:41)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries. (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0AC3A00842C0000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/templates:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/templates:0:0)\n[ERROR] The above error occurred in the <CopyEngine> component:\n\n    at CopyEngine (http://localhost:5173/src/components/CopyEngine/CopyEngine.tsx:23:37)\n    at div\n    at div\n    at Router (http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c01f0ecd:6181:13)\n    at BrowserRouter (http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c01f0ecd:9243:3)\n    at JarvisProvider (http://localhost:5173/src/context/JarvisContext.tsx:29:34)\n    at NotificationProvider (http://localhost:5173/src/components/NotificationContext.tsx:62:40)\n    at App (http://localhost:5173/src/App.tsx:53:41)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries. (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/24c804c8-00c1-70ae-4601-1e8febd5bde7/1753208377771357//tmp/test_task/result.webm",
    "created": "2025-07-22T18:12:24.972Z",
    "modified": "2025-07-22T18:19:37.968Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "30bcf30c-b889-4665-bb4c-d66833e2d370",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC008-Autonomous Evolution - Code Refactoring and Rollback",
    "description": "Test that Autonomous Evolution performs code refactoring and optimization without introducing instability and allows rollback.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:5173\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click the 'Evolution' button to trigger autonomous code refactoring process.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[11]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Click the 'Trigger Evolution' button to start the autonomous code refactoring process.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div[2]/div[3]/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Verify that the refactored code is deployed without runtime errors by checking system status or logs.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[6]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Generic failing assertion since expected result is unknown\n        assert False, 'Test failed due to unknown expected result.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to critical issue: The system status page is blank after triggering autonomous code refactoring process, preventing verification of runtime errors and rollback testing. Please fix this issue to continue testing.\nBrowser Console Logs:\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0AC3A00CC140000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x14cc08590d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x14cc08590d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x14cc08590d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x14cc08590d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat) (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:8000/api/system/status:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:8000/api/evolution/logs:0:0)\n[ERROR] Failed to fetch evolution history: SyntaxError: Unexpected token 'I', \"Internal S\"... is not valid JSON (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:8000/api/system/status:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:8000/api/evolution/logs:0:0)\n[ERROR] Failed to fetch evolution history: SyntaxError: Unexpected token 'I', \"Internal S\"... is not valid JSON (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:5173/api/evolution/progress:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:5173/api/evolution/progress:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:5173/api/evolution/progress:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:5173/api/evolution/progress:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:5173/api/evolution/progress:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:5173/api/evolution/progress:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:8000/api/system/status:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/24c804c8-00c1-70ae-4601-1e8febd5bde7/1753208346303254//tmp/test_task/result.webm",
    "created": "2025-07-22T18:12:24.977Z",
    "modified": "2025-07-22T18:19:06.491Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "5d5001be-40c2-4669-a9b7-4ef6f8f20ed9",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC009-Predictive Task Management Prioritization and Analytics",
    "description": "Verify AI-driven task prioritization and analytics improve user productivity metrics.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:5173\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Predictive Tasks' to add multiple tasks with varying deadlines and importance.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[23]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Click on 'New Task' button to add multiple tasks with varying deadlines and importance.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: Expected result unknown, forcing failure.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Reported the issue with the 'New Task' button not opening the task creation form. Unable to proceed with testing AI-driven task prioritization and analytics due to this blocking UI issue. Stopping all further actions.\nBrowser Console Logs:\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0C43A007C1F0000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1f7c08988000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1f7c08988000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1f7c08988000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1f7c08988000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat) (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/24c804c8-00c1-70ae-4601-1e8febd5bde7/1753208506705267//tmp/test_task/result.webm",
    "created": "2025-07-22T18:12:24.984Z",
    "modified": "2025-07-22T18:21:46.869Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "e5277a3f-77af-445a-a6e4-b1978d0fe904",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC010-AI Content Creation Multi-format Generation",
    "description": "Validate AI Content Creation Suite can generate accurate and relevant multi-format content for blogs, emails, and reports.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:5173\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Copy Engine' to access AI Content Creation Suite for content generation.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[5]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input prompt for blog post content generation and click generate.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div/div[2]/div/div[2]/textarea').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('Write a compelling blog post about the benefits of AI in healthcare.')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div/div[2]/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Attempt to reload the page to restore the AI Content Creation Suite interface or navigate to the Copy Engine again if possible.\n        await page.goto('http://localhost:5173/', timeout=10000)\n        \n\n        # Click on 'Copy Engine' button to access the AI Content Creation Suite interface.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[5]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "The AI Content Creation Suite interface failed to load after multiple attempts. The page remains blank with no UI elements to proceed with content generation testing for blogs, emails, and reports. Stopping further testing due to this critical issue.\nBrowser Console Logs:\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A02CD90014190000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x191406d51380]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x191406d51380]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x191406d51380]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x191406d51380]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat) (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/templates:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/templates:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/generate:0:0)\n[ERROR] The above error occurred in the <CopyEngine> component:\n\n    at CopyEngine (http://localhost:5173/src/components/CopyEngine/CopyEngine.tsx:23:37)\n    at div\n    at div\n    at Router (http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c01f0ecd:6181:13)\n    at BrowserRouter (http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c01f0ecd:9243:3)\n    at JarvisProvider (http://localhost:5173/src/context/JarvisContext.tsx:29:34)\n    at NotificationProvider (http://localhost:5173/src/components/NotificationContext.tsx:62:40)\n    at App (http://localhost:5173/src/App.tsx:53:41)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries. (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A058D90014190000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/templates:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:5173/api/copy/templates:0:0)\n[ERROR] The above error occurred in the <CopyEngine> component:\n\n    at CopyEngine (http://localhost:5173/src/components/CopyEngine/CopyEngine.tsx:23:37)\n    at div\n    at div\n    at Router (http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c01f0ecd:6181:13)\n    at BrowserRouter (http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c01f0ecd:9243:3)\n    at JarvisProvider (http://localhost:5173/src/context/JarvisContext.tsx:29:34)\n    at NotificationProvider (http://localhost:5173/src/components/NotificationContext.tsx:62:40)\n    at App (http://localhost:5173/src/App.tsx:53:41)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries. (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/24c804c8-00c1-70ae-4601-1e8febd5bde7/1753208382770135//tmp/test_task/result.webm",
    "created": "2025-07-22T18:12:24.989Z",
    "modified": "2025-07-22T18:19:43.003Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "8669f39c-48a6-4d34-a69e-ed14cb6a33c1",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC011-Environmental & Health Suite Real-time Monitoring and Alerts",
    "description": "Test real-time health and environmental monitoring suite with reminder and alert functionality.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:5173\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Activate Environmental & Health Suite and configure health parameters to monitor.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[24]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Simulate environmental condition changes and health parameter deviations.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div[5]/div/div[2]/div/button[2]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: Expected result unknown, forcing failure.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Reported the issue with missing simulation controls in the Environmental Health suite. Further testing cannot proceed without this functionality. Task stopped.\nBrowser Console Logs:\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0AC3A003C310000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x313c08828d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x313c08828d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x313c08828d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x313c08828d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat) (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/24c804c8-00c1-70ae-4601-1e8febd5bde7/1753208475931047//tmp/test_task/result.webm",
    "created": "2025-07-22T18:12:25.011Z",
    "modified": "2025-07-22T18:21:16.144Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "b601a863-8d09-426b-80af-5cf13de9226c",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC012-Real-time Monitoring & Analytics System Metrics",
    "description": "Verify system captures and displays real-time system metrics and user activity with performance alerts.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:25.061Z",
    "modified": "2025-07-22T18:12:25.061Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "9d963c24-4ec7-4ae0-beb0-d00f18307f6b",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC013-3D Cinematic HUD Rendering and Interaction",
    "description": "Validate the 3D Cinematic HUD renders correctly with smooth animations and user interactions.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:25.071Z",
    "modified": "2025-07-22T18:12:25.071Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "4e06f83a-79f1-4482-a5d5-c85a9dc15a1b",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC014-VR Workspace Functionality and Immersive Interaction",
    "description": "Test that the VR Workspace provides immersive experience with virtual reality panels and interactive environment.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:25.084Z",
    "modified": "2025-07-22T18:12:25.084Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "6770b26b-b802-4339-bfae-bc452e76d17b",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC015-Smart Home Integration Device Control",
    "description": "Verify Smart Home Integration allows device control, automation rule setup, and remote access.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:25.141Z",
    "modified": "2025-07-22T18:12:25.141Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "3c5f9283-6629-48d0-8b3b-5a4a537bd2e1",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC016-Authentication Failure with Invalid Biometrics",
    "description": "Verify that authentication is rejected when invalid biometrics with allowed liveness detection attempts are provided.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:5173\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Attempt login with incorrect face biometric by clicking Face Recognition button.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[17]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Attempt login with incorrect voice biometric by clicking Voice Recognition button.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[16]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Simulate an attempt to login with incorrect voice biometric and verify authentication failure with appropriate error message.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div/div[2]/div/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: Authentication should be rejected for invalid biometrics with allowed liveness detection attempts.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Face biometric invalid login test passed with expected failure due to camera access denial. Voice biometric invalid login test failed to produce expected failure feedback or error message. Voice biometric rejection verification is not possible with current system behavior. Reporting the issue and stopping further testing.\nBrowser Console Logs:\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0443A006C350000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x356c0865d380]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x356c0865d380]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x356c0865d380]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x356c0865d380]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat) (at http://localhost:5173/:0:0)\n[ERROR] Error accessing camera: NotFoundError: Requested device not found (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)\n[ERROR] Error accessing camera: NotFoundError: Requested device not found (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)\n[ERROR] Error accessing microphone: NotFoundError: Requested device not found (at http://localhost:5173/node_modules/.vite/deps/@react-three_fiber.js?v=c01f0ecd:18177:15)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/24c804c8-00c1-70ae-4601-1e8febd5bde7/1753208733686579//tmp/test_task/result.webm",
    "created": "2025-07-22T18:12:25.151Z",
    "modified": "2025-07-22T18:25:33.842Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "f9c5315a-57e9-4964-965f-fc7b4ad8d796",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC017-Predictive Task Management Handles Empty and Large Task Lists",
    "description": "Validate behavior of predictive task manager with no tasks and with a very large number of tasks.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:5173\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Open predictive task management with empty task list by clicking the 'Predictive Tasks' button (index 24).\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[23]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Try to create a large task list by clicking the 'New Task' button (index 27) to add many tasks for the large task list test.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[3]/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to inability to test with empty or large task lists. The system does not allow clearing existing tasks or adding new tasks, blocking the required validations.\nBrowser Console Logs:\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0983A0034190000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x193408788d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x193408788d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x193408788d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x193408788d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat) (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/24c804c8-00c1-70ae-4601-1e8febd5bde7/1753208708343023//tmp/test_task/result.webm",
    "created": "2025-07-22T18:12:25.161Z",
    "modified": "2025-07-22T18:25:08.596Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "808dbb35-d0ea-4eed-af49-a161b20b714d",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC018-Memory Vault Access Denied Without Authentication",
    "description": "Verify that Memory Vault data cannot be accessed if user is not authenticated properly.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:5173\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on Memory Vault button to attempt access without authentication.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div/div[2]/nav/button[4]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: Access to Memory Vault should be denied without proper authentication.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Access to Memory Vault was possible without biometric authentication, and no security warning or access denial message was shown. This is a security issue as the Memory Vault data should not be accessible without proper authentication. Test failed.\nBrowser Console Logs:\n[WARNING] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: WebSocket is closed before the connection is established. (at http://localhost:5173/src/components/HoloCore.tsx:213:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0D83A00741A0000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1a7402168d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1a7402168d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1a7402168d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (at http://localhost:5173/:0:0)\n[WARNING] [.WebGL-0x1a7402168d00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat) (at http://localhost:5173/:0:0)\n[ERROR] WebSocket connection to 'ws://localhost:8000/ws/voice' failed: Error during WebSocket handshake: Unexpected response code: 403 (at http://localhost:5173/src/components/HoloCore.tsx:203:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/24c804c8-00c1-70ae-4601-1e8febd5bde7/1753208306927439//tmp/test_task/result.webm",
    "created": "2025-07-22T18:12:25.171Z",
    "modified": "2025-07-22T18:18:27.120Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "d60f3b97-2977-4157-8633-2f982c7ed9f4",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC019-Stealth Mode Switch Between Different Profiles",
    "description": "Test switching between Exam, Interview, and Passive Copilot stealth modes without overlap or data leakage.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:25.180Z",
    "modified": "2025-07-22T18:12:25.180Z"
  },
  {
    "projectId": "c2a1bb0a-a8ee-4359-83fa-33d5efba533b",
    "testId": "f656c22c-53b6-462f-a859-1acc29313f38",
    "userId": "24c804c8-00c1-70ae-4601-1e8febd5bde7",
    "title": "TC020-System Automation Error Handling with Invalid Rules",
    "description": "Verify system automation handles invalid or conflicting automation rules gracefully with error messages.",
    "testStatus": "FAILED",
    "testError": "Test execution timed out after 15 minutes",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "",
    "created": "2025-07-22T18:12:25.236Z",
    "modified": "2025-07-22T18:12:25.236Z"
  }
]
